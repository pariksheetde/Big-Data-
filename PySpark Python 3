from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# select the columns using select function
vid_game = vid_game.select( "Name", "Platform", "Year", "Genre", "Publisher")

# filter the DatFrame using filter function
vid_con = vid_game.filter("Publisher == 'Nintendo'").show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# select the columns using select function
vid_game = vid_game.select( "Name", "Platform", "Year", "Genre", "Publisher")

# filter the DatFrame using where function with multiple values
vid_con = vid_game.where("Publisher in ('Nintendo','Electronic Arts')").show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# select the columns using select function
vid_game = vid_game.select( "Name", "Platform", "Year", "Genre", "Publisher")

# filter the DatFrame using where function with multiple values
vid_con1 = vid_game.where("Publisher in ('Nintendo','Electronic Arts')")
vid_con2 = vid_con1.where("Year in (2006)").show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# select the columns using select function
vid_game = vid_game.select( "Name", "Platform", "Year", "Genre", "Publisher")

# filter the DatFrame using where function with multiple values
vid_con1 = vid_game.where("Publisher in ('Nintendo','Electronic Arts') and Year == (2006)").show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# select the columns using select function
vid_game = vid_game.select( "Name", "Platform", "Year", "Genre", "Publisher")

# filter the DatFrame using where function with multiple values
vid_con1 = vid_game.where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# select the columns using select function
vid_game = vid_game.select( "Name", "Platform", "Year", "Genre", "Publisher").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").orderBy("Genre", ascending = True).show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr( "Name as Name", "Platform", "Year", "Genre", "Publisher").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").filter("Platform  like 'X%'").orderBy("Genre", ascending = True).show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name like ('NHL%')").orderBy("Genre", ascending = True).show(1000)

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name not like ('NHL%')").orderBy("Genre", ascending = True).show(1000)

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name not like ('NHL%')").where("Genre like ('Action%')").orderBy("Genre", ascending = True).show(1000)

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher","EU_Sales","JP_Sales").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name not like ('NHL%')").where("Genre not like ('Action%')").orderBy("Genre", ascending = True)

display(vid_game)

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType
from pyspark.sql.functions import *
from pyspark.sql.functions import col

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher","EU_Sales","JP_Sales").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name not like ('NHL%')").where("Genre not like ('Action%')").orderBy("Genre", ascending = True)

# rank the DataFrame using rank() function
vid_rnk = vid_game.select("Name", "Platform", "Year", "Genre", "Publisher","EU_Sales","JP_Sales",rank().over(Window.orderBy(col("EU_Sales").desc()))).show()

-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType
from pyspark.sql.functions import *
from pyspark.sql.functions import col

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher","EU_Sales","JP_Sales").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name not like ('NHL%')").where("Genre not like ('Action%')").orderBy("Genre", ascending = True)

# rank the DataFrame using rank() function
vid_rnk = vid_game.select("Name", "Platform", "Year", "Genre", "Publisher", "EU_Sales", "JP_Sales",
          rank().over(Window.partitionBy("Publisher").orderBy("EU_Sales")).alias("rank")).show()
          
-------------------------------------------------------------------------------------------------------------------------------

from pyspark.sql import SparkSession
import pyspark.sql.functions as f
from pyspark.sql.types import *
from pyspark.sql.window import Window
from pyspark.sql.types import DateType
from pyspark.sql.functions import *
from pyspark.sql.functions import col

# read the datafile from the location
vid_game = spark.read.csv("/FileStore/tables/vgsales.csv", header = True, inferSchema = True)

# filter the DatFrame using where function with multiple values
vid_game = vid_game.selectExpr("Name as Name", "Platform", "Year", "Genre", "Publisher","EU_Sales","JP_Sales").where("Publisher in ('Nintendo','Electronic Arts') and Year > (2010)").where("Platform like ('X%')").where("Name not like ('NHL%')").where("Genre not like ('Action%')").orderBy("Genre", ascending = True)

# rank the DataFrame using rank() function
vid_rnk = vid_game.select("Name", "Platform", "Year", "Genre", "Publisher", "EU_Sales", "JP_Sales",
          dense_rank().over(Window.partitionBy("Publisher").orderBy("EU_Sales")).alias("rank")).show()
		  
-------------------------------------------------------------------------------------------------------------------------------
